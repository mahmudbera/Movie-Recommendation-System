/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.datastructureproject3;

import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Mahmud Bera Karag√∂z
 */
public class Users extends javax.swing.JFrame
{

	private String[][] target_users;
	private String[][] main_users;
	private String[][] movies;
	private String[] moviesCodes;
	private String[] userIds;
	MaxHeap targetHeap = new MaxHeap(600);
	MaxHeap movieRate;

	String targetUserFilename = "target_user.csv";
	String mainUserFileName = "main_data.csv";
	String moviesFileName = "movies.csv";

	private void loadUserIds()
	{
		try (BufferedReader br = new BufferedReader(new FileReader(targetUserFilename))) {
			String header = br.readLine();
			String line;
			while ((line = br.readLine()) != null) {
				String[] parts = line.split(",");
				String userId = parts[0];
				jComboBox1.addItem(userId);
			}
			userIds = new String[jComboBox1.getItemCount()];
			for (int i = 0; i < userIds.length; i++) {
				userIds[i] = jComboBox1.getItemAt(i);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static String[][] readCsv(String csvFile)
	{
		String[][] matrix = null;
		try (BufferedReader reader = new BufferedReader(new FileReader(csvFile))) {
			String line;
			int rowCount = 0;
			int columnCount = 0;
			while ((line = reader.readLine()) != null) {
				String[] values = line.split(",");
				if (matrix == null) {
					rowCount = 1;
					columnCount = values.length;
					matrix = new String[rowCount][columnCount];
				} else {
					rowCount++;
					String[][] temp = new String[rowCount][columnCount];
					java.lang.System.arraycopy(matrix, 0, temp, 0, rowCount - 1);
					matrix = temp;
				}
				matrix[rowCount - 1] = values;
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return matrix;
	}

	public String[] findUser(String userCode)
	{
		String[] user = new String[target_users[1].length];
		for (int i = 0; i < target_users.length; i++) {
			if (userCode.equals(target_users[i][0])) {
				for (int j = 0; j < target_users[i].length; j++) {
					user[j] = target_users[i][j];
				}
			}
		}
		return user;
	}

	public static void compare(String[] target, String[][] main, MaxHeap heap)
	{
		for (int i = 1; i < main.length; i++) {
			String sim = Double.toString(cosineSimilarity(target, main[i]));
			heap.insert(main[i][0], cosineSimilarity(target, main[i]));
		}
	}

	public static double cosineSimilarity(String[] vector1, String[] vector2)
	{
		double[] vectorA = convertToDoubleArray(vector1);
		double[] vectorB = convertToDoubleArray(vector2);

		double dotProduct = 0.0;
		double normA = 0.0;
		double normB = 0.0;
		for (int i = 0; i < vectorA.length; i++) {
			dotProduct += vectorA[i] * vectorB[i];
			normA += Math.pow(vectorA[i], 2);
			normB += Math.pow(vectorB[i], 2);
		}
		return dotProduct / (Math.sqrt(normA) * Math.sqrt(normB));
	}

	public static double[] convertToDoubleArray(String[] stringArray)
	{
		double[] doubleArray = new double[stringArray.length];
		for (int i = 0; i < stringArray.length; i++) {
			doubleArray[i] = Double.parseDouble(stringArray[i]);
		}
		return doubleArray;
	}

	public static boolean isNumeric(String str)
	{
		return str.matches("\\d+");
	}

	public static String[] readCSVHeader(String csvFile)
	{
		List<String> firstColumn = new ArrayList<>();

		try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
			String line;
			while ((line = br.readLine()) != null) {
				String[] columns = line.split(",");
				if (columns.length > 0) {
					firstColumn.add(columns[0]);
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return firstColumn.toArray(new String[0]);
	}

	/**
	 * Creates new form Users
	 */
	public Users()
	{
		initComponents();
		setLocationRelativeTo(null);
		target_users = readCsv(targetUserFilename);
		main_users = readCsv(mainUserFileName);
		movies = readCsv(moviesFileName);
		moviesCodes = readCSVHeader(moviesFileName);
		movieRate = new MaxHeap(5402);
		loadUserIds();
	}

	private void showPopUp(MouseEvent e)
	{
		popup.show(this, e.getX(), e.getY());
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        popup = new javax.swing.JPopupMenu();
        item1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        X_TextField = new javax.swing.JTextField();
        K_TextField = new javax.swing.JTextField();
        GetRecommendation_Button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        item1.setText("Back to system");
        item1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                item1ActionPerformed(evt);
            }
        });
        popup.add(item1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(110, 1, 38));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Users", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 1, 14))); // NOI18N
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                jPanel1MouseReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("TARGET USER : ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("X :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("K :");

        GetRecommendation_Button.setBackground(new java.awt.Color(153, 153, 153));
        GetRecommendation_Button.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        GetRecommendation_Button.setForeground(new java.awt.Color(51, 51, 51));
        GetRecommendation_Button.setText("Get Recommendation");
        GetRecommendation_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                GetRecommendation_ButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(K_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(X_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(GetRecommendation_Button, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(72, 72, 72)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(GetRecommendation_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
		if (evt.isPopupTrigger())
			showPopUp(evt);
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
		if (evt.isPopupTrigger())
			showPopUp(evt);
    }//GEN-LAST:event_jPanel1MouseReleased

    private void item1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item1ActionPerformed
		this.dispose();
		System sys = new System();
		sys.setVisible(true);
    }//GEN-LAST:event_item1ActionPerformed

    private void GetRecommendation_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetRecommendation_ButtonActionPerformed
		if (isNumeric(K_TextField.getText()) && isNumeric(X_TextField.getText()) && (Integer.parseInt(K_TextField.getText()) < 601) && (Integer.parseInt(X_TextField.getText()) < 5403)) {
			jTextArea1.setText("");
			targetHeap.clear();
			movieRate.clear();
			String[] user = findUser((String) jComboBox1.getSelectedItem());
			compare(user, main_users, targetHeap);
			int count = 1;
			for (int i = 0; i < Integer.parseInt(K_TextField.getText()); i++) {
				Node node = targetHeap.removeMax();
				for (int j = 0; j < main_users.length; j++) {
					if (node.getKey().equals(main_users[j][0])) {
						for (int k = 1; k < main_users[j].length; k++) {
							for (int h = 1; h < moviesCodes.length; h++) {
								if (Integer.parseInt(moviesCodes[h]) == k) {
									movieRate.insert(moviesCodes[h], Double.parseDouble(main_users[j][k]));
									break;
								}
							}
						}
						for (int l = 0; l < Integer.parseInt(X_TextField.getText()); l++) {
							Node node2 = movieRate.removeMax();
							for (int m = 1; m < movies.length; m++) {
								if (node2.getKey().equals(movies[m][0])) {
									jTextArea1.append(count + "-) " + " Name: " + movies[m][1] + ", Category: " + movies[m][2] + "\n");
									count++;
								}
							}
						}
						movieRate.clear();
					}
				}
			}
		} else {
			JOptionPane.showMessageDialog(rootPane, "Check the values you entered!", "Warning!", JOptionPane.WARNING_MESSAGE);
		}
    }//GEN-LAST:event_GetRecommendation_ButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new Users().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GetRecommendation_Button;
    private javax.swing.JTextField K_TextField;
    private javax.swing.JTextField X_TextField;
    private javax.swing.JMenuItem item1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPopupMenu popup;
    // End of variables declaration//GEN-END:variables
}
